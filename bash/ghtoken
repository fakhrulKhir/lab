#!/bin/sh

if [ "$1" = "-h" ] || [ -z "$2" ]; then
    echo "ghtoken –– generate github personal access token"
    echo "usage: ghtoken <username> <scopes>|list|whoami <note>|<token>"
    echo "examples:"
    echo "- list available authorizations:"
    echo "  ghtoken my-username list"
    echo "- get token info:"
    echo "  ghtoken whoami b889..<oauth-token redacted>..2b05"
    echo "- create personal access token with scope 'user:email':"
    echo "  ghtoken my-username user:email 'my sample token'"
    echo "- create personal access token with multiple scopes:"
    echo "  ghtoken my-username user:email,read:org 'token multiple scopes read-only'"
    exit
fi

# get token info
if [ "$1" = "whoami" ] && [ ! -z "$2" ]; then
  curl -H "Authorization: token $2" https://api.github.com/user
  exit
fi

# list available tokens (authorizations)
if [ "$2" = "ls" ] || [ "$2" = "list" ] || [ "$2" = "tokens" ]; then
  curl --user $1 https://api.github.com/authorizations
  exit
fi

github_username=$1

# handle token revocation
if [ "$2" = "revoke" ] && [ ! -z "$3" ]; then
  echo "revoking token.."
  authorizationID=$3
  curl -XDELETE \
    "https://api.github.com/authorizations/${authorizationID}" \
    --user $github_username
  exit
fi

# pass scopes to awk to add quotes so that it can
# be represented as array of strings (in json payload).
# example: from `read:user,gist` to `"read:user","gist"`
scopes=$(echo $2 | awk '{gsub(/,/,"\",\""); print;}')

# trim beginning and ending quotes (if any)
note=$(echo $3 | awk '{gsub(/(^"|"$|^'\''|'\''$)/, ""); print;}')

echo "Creating github personal token.."

curl https://api.github.com/authorizations \
--user $github_username \
--data "{\"scopes\":[\"${scopes}\"],\"note\":\"${note}\"}"
