#! /bin/sh

# test the awk here: https://awk.js.org
# sample input 1 (indented json):
# ```
# {
#   "APP_NAME": "ACME App",
#   "APP_ENV": "production",
#   "BASE_URL": "http://example.com"
# }
# ```
# sample input 2 (minified json):
# ```
# {"APP_NAME":"ACME App","APP_ENV":"production","BASE_URL":"http://example.com"}
# ```
#
# expected output:
# ```
# APP_NAME="ACME App"
# APP_ENV="production"
# BASE_URL="http://example.com"
# ```

awk '{
  gsub(/","/, "\",\n\""); # normalize ending commas
  gsub(/",/, "\"");       # remove ending commas
  gsub(/^  "/, "\"");     # normalize quotes at beginning of each line
  gsub(/\n"/, "\n");      # remove quotes at beginning of each line (part 1)
  gsub(/^"/, "");         # remove quotes at beginning of each line (part 2)
  gsub(/": "/, "\":\"");  # normalize `": "` to `";"`
  gsub(/":/, "=");        # replace `":` with `=`

  sub(/^{/, "");          # remove first curly brace
  sub(/}$/, "");          # remove last curly brace

  print $0;
}' | awk  -v comment="# This file is generated using json-to-dotenv \n# at $(date)"  '{
  sub(/^"/, "");          # remove first quote

  # append `comment` to dotenv content
  if (NR == 1) {
    print comment;
  }
  print $0;
}'
