#!/bin/sh

if [ -z "$1" ] || [ "$1" = "-h" ]; then
	echo "bind_dir.sh bind local directory to mount point under /mnt using bindfs and updates /etc/fstab accordingly"
	echo "usage: bind_dir <source directory>"
	exit
fi

# ensure source directory start with /
if [ -z "$(echo $1 | grep -i '^\/')" ]; then
	echo '[ERROR] source directory "'$1'" must start with "/"'
	exit
fi

# ensure source directory exists
if [ ! -d "$1" ]; then
	echo '[ERROR] "'$1'" is not a directory'
	exit
fi

# verify dependencies
hash bindfs 2>/dev/null || { MISSING_DEPS="$MISSING_DEPS bindfs"; }
if [ ! -z "$MISSING_DEPS" ]; then
	echo "[ERROR] missing dependencies:"
	echo $MISSING_DEPS
	exit
fi

source=$1
target=/mnt$source

IFS=''

fstab_entry=$(cat /etc/fstab | grep -n "$target")
if [ -z "$fstab_entry" ]; then
	echo "$source    $target    fuse.bindfs    nonempty,perms=a-w    0    0 # added by 'bind_dir' script" >> /etc/fstab
	echo "[INFO] /etc/fstab updated"
elif [ "$2" != "--force" ]; then
	echo "[ERROR] entry already exist at /etc/fstab:"
	echo $fstab_entry
	echo ""
	echo "please ensure that you have correct entry in /etc/fstab."
	echo "if sure enough, use 'bind_dir $@ --force' to bypass this check."
	exit
fi

mkdir -p $target
mount -a

mnt_found=$(findmnt | grep $target)
if [ -z "$mnt_found" ]; then
	count_mnt=0
else
	count_mnt=$(echo $mnt_found | wc -l)
fi

echo "[INFO] showing entry from 'findmnt' ($count_mnt):"
echo ""
echo $mnt_found

echo ""
echo "[DONE] $source mounted at $target."